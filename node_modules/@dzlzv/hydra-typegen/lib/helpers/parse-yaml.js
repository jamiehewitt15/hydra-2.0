"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseConfigFile = void 0;
const tslib_1 = require("tslib");
const yaml_validator_1 = tslib_1.__importDefault(require("yaml-validator"));
const fs_1 = tslib_1.__importDefault(require("fs"));
const yaml_1 = tslib_1.__importDefault(require("yaml"));
const log_1 = require("../log");
const options = {
    structure: {
        metadata: {
            source: 'string',
            'blockHash?': 'string',
        },
        'customTypes?': {
            lib: 'string',
            typedefs: 'string',
        },
        events: ['string'],
        calls: ['string'],
        outDir: 'string',
        'strict?': 'boolean',
    },
    onWarning: function (error, filepath) {
        log_1.error(filepath + ' has error: ' + error);
    },
};
function parseConfigFile(location) {
    const validator = new yaml_validator_1.default(options);
    validator.validate([location]);
    if (validator.report()) {
        throw new Error(`Invalid config file at location ${location}: ${validator.logs.join('\n')}`);
    }
    return yaml_1.default.parse(fs_1.default.readFileSync(location, 'utf8'));
}
exports.parseConfigFile = parseConfigFile;
