"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateIndex = void 0;
const tslib_1 = require("tslib");
const fs_1 = tslib_1.__importDefault(require("fs"));
const path_1 = tslib_1.__importDefault(require("path"));
const util_1 = require("../util");
const helpers_1 = require("./helpers");
const debug = require('debug')('hydra-typegen:gen-index');
const generateIndexTemplate = helpers_1.handlebars.compile(util_1.readTemplate('index'));
function generateIndex(config) {
    const { modules, customTypes, dest } = config;
    if (customTypes && customTypes.typedefsLoc) {
        fs_1.default.copyFileSync(customTypes.typedefsLoc, path_1.default.join(dest, `typedefs.json`));
    }
    util_1.writeFile(path_1.default.join(dest, `index.ts`), () => util_1.formatWithPrettier(generateIndexTemplate({
        modules: modules.map((m) => m.module),
        hasTypeDefs: customTypes !== undefined && customTypes.typedefsLoc !== undefined,
    })));
    debug('Done writing index');
}
exports.generateIndex = generateIndex;
