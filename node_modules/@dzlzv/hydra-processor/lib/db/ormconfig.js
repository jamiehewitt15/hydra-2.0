"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setWarthogEnvs = void 0;
const hydra_db_utils_1 = require("@dzlzv/hydra-db-utils");
const ProcessedEventsLogEntity_1 = require("../entities/ProcessedEventsLogEntity");
const ProcessorSchema_1 = require("../migrations/ProcessorSchema");
const config = () => {
    // ugly, but we need to set the warthog envs, otherwise it fails
    setWarthogEnvs();
    return {
        type: 'postgres',
        host: process.env.TYPEORM_HOST || process.env.DB_HOST,
        port: parseInt(process.env.TYPEORM_PORT || process.env.DB_PORT || '5432', 10),
        username: process.env.TYPEORM_USERNAME || process.env.DB_USER,
        password: process.env.TYPEORM_PASSWORD || process.env.DB_PASS,
        database: process.env.TYPEORM_DATABASE || process.env.DB_NAME,
        entities: [ProcessedEventsLogEntity_1.ProcessedEventsLogEntity, process.env.TYPEORM_ENTITIES],
        migrations: [ProcessorSchema_1.ProcessorSchema],
        cli: {
            migrationsDir: 'migrations',
        },
        logging: process.env.TYPEORM_LOGGING === 'true',
        namingStrategy: new hydra_db_utils_1.SnakeNamingStrategy(),
    };
};
function setWarthogEnvs() {
    process.env.WARTHOG_DB_HOST = process.env.TYPEORM_HOST || process.env.DB_HOST;
    process.env.WARTHOG_DB_PORT = process.env.TYPEORM_PORT || process.env.DB_PORT;
    process.env.WARTHOG_DB_PASSWORD =
        process.env.TYPEORM_PASSWORD || process.env.DB_PASS;
}
exports.setWarthogEnvs = setWarthogEnvs;
exports.default = config;
//# sourceMappingURL=ormconfig.js.map