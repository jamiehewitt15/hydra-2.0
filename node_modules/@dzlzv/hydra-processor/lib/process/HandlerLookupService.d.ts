import { SubstrateEvent } from '@dzlzv/hydra-common';
import { DatabaseManager } from '@dzlzv/hydra-db-utils';
import { MappingHandler } from '../start/manifest';
export declare class HandlerLookupService {
    protected mappings: import("../start/manifest").MappingsDef;
    private events;
    private argFactory;
    constructor(mappings?: import("../start/manifest").MappingsDef);
    load(): Promise<void>;
    eventsToHandle(): string[];
    lookupAndCall(ctxArgs: GlobalArgs): Promise<void>;
    lookupHander({ context }: GlobalArgs): MappingHandler;
}
export interface HandlerContext {
    globals: GlobalArgs;
}
export interface GlobalArgs {
    dbStore: DatabaseManager;
    context: SubstrateEvent;
}
export declare function resolveImports(imports: string[]): Promise<Record<string, unknown>>;
export declare function resolveArgType(argType: string, imports: Record<string, unknown>): any;
