"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getManifest = exports.conf = void 0;
const tslib_1 = require("tslib");
/* eslint-disable @typescript-eslint/naming-convention */
const envalid_1 = require("envalid");
const manifest_1 = require("./manifest");
const debug_1 = tslib_1.__importDefault(require("debug"));
const ormconfig_1 = require("../db/ormconfig");
exports.conf = envalid_1.cleanEnv(process.env, {
    MANIFEST_PATH: envalid_1.str({ default: 'manifest.yml' }),
    INDEXER_ENDPOINT_URL: envalid_1.str({ devDefault: 'http://localhost:4001' }),
    NAME: envalid_1.str({ default: 'Hydra-Processor' }),
    ID: envalid_1.str({ default: 'hydra-processor' }),
    DEBUG: envalid_1.str({ default: 'hydra-processor:*' }),
    PROMETHEUS_PORT: envalid_1.num({ default: 3000 }),
    // Number of blocks to scan in a single request to the indexe
    BLOCK_WINDOW: envalid_1.num({ default: 100000 }),
    PROCESSOR_NAME: envalid_1.str({ default: 'hydra-processor' }),
    // Maximal number of events to process in a single transaction
    BATCH_SIZE: envalid_1.num({ default: 10 }),
    // Interval at which the processor pulls new blocks from the database
    // The interval is reasonably large by default. The trade-off is the latency
    // between the updates and the load to the database
    POLL_INTERVAL_MS: envalid_1.num({ default: 60 * 1000 }),
    // Wait for the indexer head block to be ahead for at least that number of blocks
    MIN_BLOCKS_AHEAD: envalid_1.num({ default: 0 }),
});
let manifest;
function getManifest() {
    if (manifest === undefined) {
        manifest = manifest_1.parseManifest(exports.conf.MANIFEST_PATH);
    }
    return manifest;
}
exports.getManifest = getManifest;
ormconfig_1.setWarthogEnvs();
debug_1.default.enable(exports.conf.DEBUG);
//# sourceMappingURL=config.js.map